#!/bin/bash
# (c) Roel Kluin, jul 2012, GPL v2
# Don't run this - or any - script unless you know what it does,
# and if you do run it, take responsibility.

function ask_dir {
	local project;
	#TODO: check for spaces, invalid characters
	while [ 1 ]; do
		echo -n -e "$1 "
		read project
		[ -n "$3" ] && project="$3/$project"
		local action
		if [ -d "$project" ]; then
			if [ $2 -eq 0 ]; then
				echo "$project already exists"
				continue;
			else
				action=selected
			fi
		else
			if [ $2 -eq 2 ]; then
				echo "directory $project does not exist"
				continue;
			else
				action=created
			fi
			mkdir "$project"
		fi
		stat --printf "\n" "$project"
		[ $? -ne 0 ] && continue;
		echo -n "$action project "
	done 1>&2
	echo -n "$project"
	echo "..." 1>&2
}
if [ -d ~/.develop ]; then
	source ~/.develop/configuration
else
	echo "Setting up develop"
	mkdir -p ~/.develop
	Develop_project_dir="$(ask_dir "Where should develop projects live?" 1)"
	cat << EOF > ~/.develop/configuration
# Develop configuration file, edit to your liking.

#Where should develop projects live?
Develop_project_dir="$Develop_project_dir"
EOF
	cat << EOF > ~/.develop/default_license
(c) \$USER, \$DATE
EOF
	gvim ~/.develop/default_license
fi
existing_project=1
if [ "$1" = "-n" ]; then
	existing_project=0
	shift;
elif [ "$1" = "-h" ]; then
cat <<EOF
	develop -n <repository name>

Creates new repository.

	develop <repository name>

Edit existing repository

EOF
fi
if [ -n "$1" ]; then
	project="$1"
	projectdir="$Develop_project_dir/$project"
	if [ -d "$projectdir" ]; then
		if [ $existing_project -eq 0 ]; then
			echo "$project already exists"
			projectdir="$(ask_dir "Enter new project name:" 0 \
				"$Develop_project_dir")"
			project="`basename "projectdir"`" # FIXME: hack
		else
			source $projectdir/scripts/dodev_$project.sh
			exit 0;
		fi
	else
		if [ $existing_project -eq 1 ]; then
			echo "directory $project does not exist"
			# TODO: create new / choose existing / quit
			exit 1;
		fi
		mkdir -p "$projectdir/scripts"
		#TODO: stat
	fi
fi
script="$projectdir/scripts/dodev_$project.sh

DATE=`date +"%b %Y"`

sed "s/\$DATE/$DATE/; s/\$USER/$USER/" ~/.develop/default_license > $projectdir/LICENSE

cat << EOF > $script
#!/bin/bash
# copyright: $projectdir/LICENSE
# Note revision control of this file occurs in directory
# $bin_dir

projectdir="$projectdir"
cd "\$projectdir"

# enter more project files to be opened by default here
gvim -p3 "$script" \\
  "\$projectdir/LICENSE"
  "\$projectdir/README"

git gui&

# copy to commands to be executed in next shells to clipboard

cat << end_of_clip1 | xclip
cd "\$projectdir"
cat << end_of_clip2 | xclip
# enter commands to be executed in console 2 here
end_of_clip2
end_of_clip1

# to open sites
# firefox "\$site1" &
# sleep 4
# firefox -new-tab "\$site2" &
EOF
cd $bin_dir

chmod u+x $script
cd $projectdir
touch $projectdir/README
git init
git add $script
git add $projectdir/LICENSE
git add $projectdir/README
source $script
